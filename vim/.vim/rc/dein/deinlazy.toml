[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "has('lua')"
on_event = 'InsertEnter'
hook_source = '''
  let g:neocomplete#enable_at_startup = 1
  source ~/.vim/rc/plugins/neocomplete.vim
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = '''
imap <silent><C-e>     <Plug>(neosnippet_jump_or_expand)
smap <silent><C-e>     <Plug>(neosnippet_jump_or_expand)
xmap <silent><C-e>     <Plug>(neosnippet_expand_target)
let g:neosnippet#enable_snipmate_compatibility = 1
let g:neosnippet#enable_complete_done = 1
let g:neosnippet#expand_word_boundary = 1
let g:neosnippet#snippets_directory = '~/.vim/snippets'
'''

[[plugins]]
repo = 'ujihisa/neco-look'
depends = 'neocomplete.vim'
hook_source = '''
  if !exists('g:neocomplete#text_mode_filetypes')
      let g:neocomplete#text_mode_filetypes = {}
  endif
  let g:neocomplete#text_mode_filetypes = {
              \ 'rst': 1,
              \ 'markdown': 1,
              \ 'gitrebase': 1,
              \ 'gitcommit': 1,
              \ 'vcs-commit': 1,
              \ 'hybrid': 1,
              \ 'text': 1,
              \ 'help': 1,
              \ 'tex': 1,
              \ }
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = {n = '<Plug>'}
hook_add = 'nmap <silent> <Leader>r <Plug>(quickrun)'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'


[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
  source ~/.vim/rc/plugins/vim-go.vim
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
